#pragma once
/**
 * @file  Input_Key_Binding.h
 *
 * @brief  Stores information about one key binding loaded from a configuration
 *         file.
 */

#include "JuceHeader.h"
#include "Locale_TextUser.h"

namespace Input { namespace Key { class Binding; } }

class Input::Key::Binding : public Locale::TextUser
{
public:
    /**
     * @brief  Immutably sets all key binding information on construction.
     *
     * @param jsonKey         The action key string used to load key information
     *                        from keyBindings.json.
     *
     * @param keyDescription  A JUCE key description, suitable for constructing
     *                        a juce::KeyPress object.
     *
     * @param keyName         A name used to represent the bound key in the user
     *                        interface.
     *
     * @param charName        A single character used as an alternate way to
     *                        represent the bound key.
     */
    Binding(const juce::Identifier& jsonKey,
            const juce::String keyDescription,
            const juce::String keyName,
            const juce::juce_wchar charName);

    /**
     * @brief  Constructs an invalid Binding with no stored data.
     */
    Binding();

    virtual ~Binding() { }

    /**
     * @brief  Checks if this key action does not have a valid bound key value.
     *
     * @return  Whether the keyDescription can be used to load a valid KeyPress.
     */
    bool unBound() const;

    /**
     * @brief  Gets the JUCE::KeyPress object for this binding's keyboard key.
     *
     * @return   A KeyPress object usable for checking if this key is held down.
     */
    juce::KeyPress getKeyPress() const;

    /**
     * @brief  Gets the identifier used to select this binding's assigned
     *         action.
     *
     * @return  The action key value, used within the Key::ConfigFile and for
     *          loading the localized action description.
     */
    const juce::Identifier& getActionID() const;

    /**
     * @brief  Gets the localized description of this binding's action. 
     *
     * @return  The localized description, used when displaying key bindings to
     *          the user.
     */
    juce::String getActionDescription() const;

    /**
     * @brief  Gets a name used to describe the bound key to the user.
     *
     * @return  The bound key name, used when displaying key bindings to the
     *          user.
     */
    const juce::String& getKeyName() const;

    /**
     * @brief  Gets a character used to represent this key.
     *
     * @return  A single character, displayed when showing the user if the bound
     *          key is held down.
     */
    const juce::juce_wchar getCharName() const;

private:
    // keyBindings.json storage key. Identifies the action bound to this key:
    const juce::Identifier& jsonKey;
    // JUCE key text, as generated by juce::KeyPres::getTextDescription():
    const juce::String keyDescription;
    // A name used to represent this key within the user interface:
    const juce::String keyName;
    // An optional single character used to represent this key:
    const juce::juce_wchar charName;
};
